---
import '../styles/global.css'; // Use the newly scaffolded global.css
// Define props if needed, e.g., for title
import LogoutButton from "../components/auth/LogoutButton";
export interface Props {
	title?: string;
}

const { title = "AstroTracker" } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full bg-gray-100">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
</head>
<body class="h-full flex flex-col">
  <header class="bg-indigo-600 text-white shadow-md">
    <nav class="container mx-auto px-4 py-3 flex justify-between items-center">
      <!-- Move Home link into the div as well -->
      <!-- <a href="/" class="hover:text-indigo-200">Home</a> REMOVED FROM HERE --> 
      <div class="flex-grow"></div> <!-- Add a spacer div to push nav items right -->
      <div class="space-x-4 flex items-center">
        <a href="/" class="hover:text-indigo-200">Home</a> <!-- Home link now here -->
        <!-- Restore classes to AstroTracker link -->
        <a href="/" class="text-xl font-bold hover:text-indigo-200">AstroTracker</a> 
        <a href="#" class="hover:text-indigo-200">About</a> <!-- Placeholder -->
        <a href="/dashboard" id="dashboard-link" class="hover:text-indigo-200">Dashboard</a>
        <div id="auth-links-logged-out" class="space-x-4">
          <a href="/login" class="hover:text-indigo-200">Login</a>
          <a href="/register" class="hover:text-indigo-200">Register</a>
        </div>
        <div id="auth-links-logged-in" style="display: none;">
          <LogoutButton client:load /> {/** Load the logout button */} 
        </div>
      </div>
    </nav>
  </header>

  <main class="flex-grow container mx-auto px-4 py-8">
    <slot />
  </main>

  <footer class="bg-gray-800 text-gray-400 py-4 mt-auto">
    <div class="container mx-auto px-4 text-center text-sm">
      &copy; {new Date().getFullYear()} AstroTracker. All rights reserved.
    </div>
  </footer>

  <script>
    // Client-side script to update auth links based on Zustand store
    import { useAuthStore } from "../stores/authStore";

    const loggedOutLinks = document.getElementById("auth-links-logged-out");
    const loggedInLinks = document.getElementById("auth-links-logged-in");
    const dashboardLink = document.getElementById("dashboard-link");

    // Function to update UI based on auth state
    function updateAuthUI(isAuthenticated: boolean) {
      if (loggedOutLinks && loggedInLinks && dashboardLink) {
        if (isAuthenticated) {
          loggedOutLinks.style.display = "none";
          loggedInLinks.style.display = "block";
          dashboardLink.style.display = "inline"; // Show dashboard link
        } else {
          loggedOutLinks.style.display = "block";
          loggedInLinks.style.display = "none";
          dashboardLink.style.display = "none"; // Hide dashboard link
        }
      }
    }

    // Initial UI update based on persisted state
    updateAuthUI(useAuthStore.getState().isAuthenticated);

    // Subscribe to store changes to keep UI in sync
    useAuthStore.subscribe((state) => {
      updateAuthUI(state.isAuthenticated);
    });
  </script>
</body>
</html>

<style is:global>
  /* Add any global styles here if needed */
  /* Tailwind handles most base styles via preflight */
</style>
