version: '3.8'

services:
  db:
    image: postgres:15-alpine # Using Alpine for smaller size
    container_name: astrotracker_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432" # Expose port for local access if needed
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password} # Use .env or default
      - POSTGRES_DB=${POSTGRES_DB:-astrotracker}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-astrotracker}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # API Service Configuration
  api:
    build:
      context: ./api # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile
    container_name: astrotracker_api
    depends_on:
      db:
        condition: service_healthy # Wait for DB to be ready
    volumes:
      # Mount local code into container for development hot-reloading
      # Uvicorn --reload will watch for changes in this mounted volume
      - ./api:/app 
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    # Pass environment variables from .env file located in ./api
    # Ensures sensitive keys (SECRET_KEY, DB_PASS, OAUTH_SECRET) are not in compose file
    env_file:
      - ./api/.env 
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local 